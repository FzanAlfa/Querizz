# -*- coding: utf-8 -*-
"""Querizz_summarizer.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1hVmyPwl5-uQb93pPlWq-hGWqIyL2udXn
"""

from nltk.corpus import stopwords
from nltk.tokenize import word_tokenize, sent_tokenize

import nltk
nltk.download('stopwords')
nltk.download('punkt')

from google.colab import drive
drive.mount('/content/drive')

from collections import defaultdict
from pathlib import Path
import pandas as pd

my_dir_path = "/content/drive/MyDrive/dataset/stephen"

results = defaultdict(list)
for file in Path(my_dir_path).iterdir():
  if file.is_file() and file.suffix == ".txt":
    with open (file, "r") as file_open:
      results["text"].append(file_open.read())
df = pd.DataFrame(results)

display(df)

stopWords = set(stopwords.words("english"))
print(stopWords)

for i in range(len(results["text"])):
  words[i] = word_tokenize(results["text"][i])
  print(words[i])

for i in range(len(results["text"])):
  freqTable = dict()
  for word in words[i]:
    word = word.lower()
    if word in stopWords:
      continue
    if word in freqTable:
      freqTable[word] += 1
    else:
      freqTable[word] = 1
  print(freqTable)

for i in range(len(results["text"])):
  sentences[i] = sent_tokenize(results["text"][i])
  print(sentences[i])

for i in range(len(results["text"])):
  def getsentenceValue():
    sentenceValue = dict()
    for sentence in sentences[i]:
      for word, freq in freqTable.items():
        if word in sentence.lower():
          if sentence in sentenceValue:
            sentenceValue[sentence] += freq
          else:
            sentenceValue[sentence] = freq
    return sentenceValue
  sentenceValue[i] = getsentenceValue()
  print(sentenceValue[i])

averages = []
for i in range(len(results["text"])):
  def getsumValues():
    sumValues = 0
    for sentence in sentenceValue[i]:
      sumValues += sentenceValue[i][sentence]

    average = int(sumValues / len(sentenceValue[i]))
    return average

  averages.append(getsumValues())

summaries = []
for i in range(len(results["text"])):
  summary = ' '
  for sentence in sentences[i]:
    if (sentence in sentenceValue[i]) and (sentenceValue[i][sentence] > (1.1 * averages[i])):
      summary += " " + sentence
  summaries.append(summary.strip())
  print(summaries[i])

df = pd.DataFrame({"text": results["text"], "summary": summaries})
pd.set_option("display.max_colwidth", 200)
display(df)